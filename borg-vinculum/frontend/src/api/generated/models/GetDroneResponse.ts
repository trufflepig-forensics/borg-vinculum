/* tslint:disable */
/* eslint-disable */
/**
 * borg-vinculum
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The representation of a single drone.
 * 
 * The parameter `token` is used as bearer token to authenticate the drone to the vinculum.
 * @export
 * @interface GetDroneResponse
 */
export interface GetDroneResponse {
    /**
     * 
     * @type {string}
     * @memberof GetDroneResponse
     */
    uuid: string;
    /**
     * 
     * @type {string}
     * @memberof GetDroneResponse
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetDroneResponse
     */
    active: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetDroneResponse
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof GetDroneResponse
     */
    repository: string;
    /**
     * 
     * @type {Date}
     * @memberof GetDroneResponse
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the GetDroneResponse interface.
 */
export function instanceOfGetDroneResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "active" in value;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "repository" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function GetDroneResponseFromJSON(json: any): GetDroneResponse {
    return GetDroneResponseFromJSONTyped(json, false);
}

export function GetDroneResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDroneResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'name': json['name'],
        'active': json['active'],
        'token': json['token'],
        'repository': json['repository'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function GetDroneResponseToJSON(value?: GetDroneResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'name': value.name,
        'active': value.active,
        'token': value.token,
        'repository': value.repository,
        'created_at': (value.createdAt.toISOString()),
    };
}

